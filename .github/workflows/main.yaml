name: Main
on:
  pull_request:
  push:
    branches: [master]
    
env:
  # Metrics server exporter
  APP_NAME: "metrics-server-exporter"
  APP_VERSION: "1.0.0"
  DOCKERFILE_PATH: "./Dockerfile" 

jobs:
  kubeval:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: validate
      uses: instrumenta/kubeval-action@master
      with:
        files: ./deploy
        strict: false
        version: "1.18.12"

  build-push-image:
    runs-on: [self-hosted, cross, prod]

    steps:

      - uses: actions/checkout@v2

      # Build docker image
      - name: Docker image build
        id: build-image
        env:
            ECR_REPOSITORY: 'cross/${{ env.OLX_TEAM }}/${{ env.APP_NAME }}'
            IMAGE_TAG: ${{ steps.tag-repo-generate.outputs.new_tag }}     
        run: |
            docker build -t ${{ secrets.CONTAINER_REGISTRY_HOST }}/$ECR_REPOSITORY:${{ env.APP_VERSION }}-$IMAGE_TAG -f ${{ env.DOCKERFILE_PATH }} .

      # Push Image
      - name: Push image prometheus to ECR 
        uses: olxbr/aws-ecr-push-action@v1
        id: push-ecr
        with:
          ecr_repository: 'cross/${{ env.OLX_TEAM }}/${{ env.APP_NAME }}'
          tags: ${{ env.APP_VERSION }}-${{ steps.tag-repo-generate.outputs.new_tag }}
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CROSS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CROSS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CROSS_SECRET_ACCESS_KEY }}
          AWS_PRINCIPAL_RULES: ${{ secrets.AWS_PRINCIPAL_RULES }}  
          IMAGE_TAG: ${{ env.APP_VERSION }}-${{ steps.tag-repo-generate.outputs.new_tag }}

